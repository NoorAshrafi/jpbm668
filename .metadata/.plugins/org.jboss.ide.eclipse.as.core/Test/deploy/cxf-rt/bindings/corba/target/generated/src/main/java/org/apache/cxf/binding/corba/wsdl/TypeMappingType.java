//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.11.25 at 09:42:50 AM CET 
//


package org.apache.cxf.binding.corba.wsdl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import org.apache.cxf.wsdl.TExtensibilityElementImpl;


/**
 * CXF CORBA WSDL binding type map.
 * 
 * <p>Java class for typeMappingType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="typeMappingType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://schemas.xmlsoap.org/wsdl/}tExtensibilityElement">
 *       &lt;sequence>
 *         &lt;choice maxOccurs="unbounded">
 *           &lt;element name="struct" type="{http://cxf.apache.org/bindings/corba}struct"/>
 *           &lt;element name="exception" type="{http://cxf.apache.org/bindings/corba}exception"/>
 *           &lt;element name="union" type="{http://cxf.apache.org/bindings/corba}union"/>
 *           &lt;element name="alias" type="{http://cxf.apache.org/bindings/corba}alias"/>
 *           &lt;element name="sequence" type="{http://cxf.apache.org/bindings/corba}sequence"/>
 *           &lt;element name="array" type="{http://cxf.apache.org/bindings/corba}array"/>
 *           &lt;element name="enum" type="{http://cxf.apache.org/bindings/corba}enum"/>
 *           &lt;element name="fixed" type="{http://cxf.apache.org/bindings/corba}fixed"/>
 *           &lt;element name="anonsequence" type="{http://cxf.apache.org/bindings/corba}anonsequence"/>
 *           &lt;element name="anonarray" type="{http://cxf.apache.org/bindings/corba}anonarray"/>
 *           &lt;element name="anonstring" type="{http://cxf.apache.org/bindings/corba}anonstring"/>
 *           &lt;element name="anonwstring" type="{http://cxf.apache.org/bindings/corba}anonwstring"/>
 *           &lt;element name="anonfixed" type="{http://cxf.apache.org/bindings/corba}anonfixed"/>
 *           &lt;element name="const" type="{http://cxf.apache.org/bindings/corba}const"/>
 *           &lt;element name="object" type="{http://cxf.apache.org/bindings/corba}object"/>
 *         &lt;/choice>
 *       &lt;/sequence>
 *       &lt;attribute name="targetNamespace" use="required" type="{http://www.w3.org/2001/XMLSchema}anyURI" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "typeMappingType", propOrder = {
    "structOrExceptionOrUnion"
})
public class TypeMappingType
    extends TExtensibilityElementImpl
{

    @XmlElements({
        @XmlElement(name = "const", type = Const.class),
        @XmlElement(name = "anonfixed", type = Anonfixed.class),
        @XmlElement(name = "sequence", type = Sequence.class),
        @XmlElement(name = "anonarray", type = Anonarray.class),
        @XmlElement(name = "enum", type = Enum.class),
        @XmlElement(name = "fixed", type = Fixed.class),
        @XmlElement(name = "exception", type = Exception.class),
        @XmlElement(name = "alias", type = Alias.class),
        @XmlElement(name = "union", type = Union.class),
        @XmlElement(name = "array", type = Array.class),
        @XmlElement(name = "anonsequence", type = Anonsequence.class),
        @XmlElement(name = "anonwstring", type = Anonwstring.class),
        @XmlElement(name = "object", type = Object.class),
        @XmlElement(name = "struct", type = Struct.class),
        @XmlElement(name = "anonstring", type = Anonstring.class)
    })
    protected List<CorbaTypeImpl> structOrExceptionOrUnion;
    @XmlAttribute(name = "targetNamespace", required = true)
    @XmlSchemaType(name = "anyURI")
    protected String targetNamespace;

    /**
     * Gets the value of the structOrExceptionOrUnion property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the structOrExceptionOrUnion property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getStructOrExceptionOrUnion().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Const }
     * {@link Anonfixed }
     * {@link Sequence }
     * {@link Anonarray }
     * {@link Enum }
     * {@link Fixed }
     * {@link Exception }
     * {@link Alias }
     * {@link Union }
     * {@link Array }
     * {@link Anonsequence }
     * {@link Anonwstring }
     * {@link Object }
     * {@link Struct }
     * {@link Anonstring }
     * 
     * 
     */
    public List<CorbaTypeImpl> getStructOrExceptionOrUnion() {
        if (structOrExceptionOrUnion == null) {
            structOrExceptionOrUnion = new ArrayList<CorbaTypeImpl>();
        }
        return this.structOrExceptionOrUnion;
    }

    public boolean isSetStructOrExceptionOrUnion() {
        return ((this.structOrExceptionOrUnion!= null)&&(!this.structOrExceptionOrUnion.isEmpty()));
    }

    public void unsetStructOrExceptionOrUnion() {
        this.structOrExceptionOrUnion = null;
    }

    /**
     * Gets the value of the targetNamespace property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTargetNamespace() {
        return targetNamespace;
    }

    /**
     * Sets the value of the targetNamespace property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTargetNamespace(String value) {
        this.targetNamespace = value;
    }

    public boolean isSetTargetNamespace() {
        return (this.targetNamespace!= null);
    }

}
